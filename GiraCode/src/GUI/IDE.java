/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Code.Interprete;
import Code.SyntaxChecker;
import Code.TxtHelper;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;

/**
 *
 * @author Mario A
 */
public class IDE extends javax.swing.JFrame {

    // Formato para las palabras reservadas
    Style styleReservada;
    Style styleCodigoOK;

    /**
     * Creates new form IDE
     */
    public IDE() {
        // Carga el look and feel de windows
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Throwable e) {
            e.printStackTrace();
        }
        // Carga los componentes e inicializa variables                 
        initComponents();

        this.setLocationRelativeTo(null);

        // Establece el formato para las palabras reservadas (color azul)
        styleReservada = Txt_Editor.addStyle("Palabra reservada", null);
        StyleConstants.setForeground(styleReservada, Color.BLUE);
        //StyleConstants.setBold(styleReservada, true);

        styleCodigoOK = Txt_Output.addStyle("Codigo OK", null);
        StyleConstants.setForeground(styleCodigoOK, Color.GREEN);

        styleCodigoOK = Txt_Output.addStyle("Codigo Fail", null);
        StyleConstants.setForeground(styleCodigoOK, Color.RED);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_Superior = new javax.swing.JPanel();
        Lbl_Cargar = new javax.swing.JLabel();
        Lbl_Ejecutar = new javax.swing.JLabel();
        Lbl_Compilar = new javax.swing.JLabel();
        Lbl_Guardar = new javax.swing.JLabel();
        Panel_Lateral = new javax.swing.JPanel();
        Btn_if = new javax.swing.JButton();
        Btn_while = new javax.swing.JButton();
        Btn_for = new javax.swing.JButton();
        Btn_doWhile = new javax.swing.JButton();
        Btn_print = new javax.swing.JButton();
        Scroll_Editor = new javax.swing.JScrollPane();
        Txt_Editor = new javax.swing.JTextPane();
        Scroll_Salida = new javax.swing.JScrollPane();
        Txt_Output = new javax.swing.JTextPane();
        Lbl_Logo = new javax.swing.JLabel();
        Lbl_Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GiraCODE");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Panel_Superior.setOpaque(false);

        Lbl_Cargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Cargar.png"))); // NOI18N
        Lbl_Cargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Lbl_CargarMouseClicked(evt);
            }
        });

        Lbl_Ejecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Play.png"))); // NOI18N
        Lbl_Ejecutar.setEnabled(false);
        Lbl_Ejecutar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Lbl_EjecutarMouseClicked(evt);
            }
        });

        Lbl_Compilar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Build.png"))); // NOI18N
        Lbl_Compilar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Lbl_CompilarMouseClicked(evt);
            }
        });

        Lbl_Guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Guardar.png"))); // NOI18N
        Lbl_Guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Lbl_GuardarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Panel_SuperiorLayout = new javax.swing.GroupLayout(Panel_Superior);
        Panel_Superior.setLayout(Panel_SuperiorLayout);
        Panel_SuperiorLayout.setHorizontalGroup(
            Panel_SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_SuperiorLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(Lbl_Guardar)
                .addGap(50, 50, 50)
                .addComponent(Lbl_Cargar)
                .addGap(50, 50, 50)
                .addComponent(Lbl_Compilar)
                .addGap(50, 50, 50)
                .addComponent(Lbl_Ejecutar)
                .addContainerGap(127, Short.MAX_VALUE))
        );
        Panel_SuperiorLayout.setVerticalGroup(
            Panel_SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(Panel_SuperiorLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(Panel_SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Lbl_Guardar, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Lbl_Compilar, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Lbl_Ejecutar))
                    .addComponent(Lbl_Cargar)))
        );

        getContentPane().add(Panel_Superior, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 590, 50));

        Panel_Lateral.setOpaque(false);
        Panel_Lateral.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Btn_if.setText("Condición Si");
        Btn_if.setFocusable(false);
        Btn_if.setRequestFocusEnabled(false);
        Btn_if.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ifActionPerformed(evt);
            }
        });
        Panel_Lateral.add(Btn_if, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 72));

        Btn_while.setText("Ciclo Mientras");
        Btn_while.setFocusable(false);
        Btn_while.setRequestFocusEnabled(false);
        Btn_while.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_whileActionPerformed(evt);
            }
        });
        Panel_Lateral.add(Btn_while, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 78, 130, 72));

        Btn_for.setText("Ciclo Para");
        Btn_for.setFocusable(false);
        Btn_for.setRequestFocusEnabled(false);
        Panel_Lateral.add(Btn_for, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 161, 130, 72));

        Btn_doWhile.setText("Ciclo Repita");
        Btn_doWhile.setFocusable(false);
        Btn_doWhile.setRequestFocusEnabled(false);
        Btn_doWhile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_doWhileActionPerformed(evt);
            }
        });
        Panel_Lateral.add(Btn_doWhile, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 244, 130, 72));

        Btn_print.setText("Línea Imprimir");
        Btn_print.setFocusable(false);
        Btn_print.setRequestFocusEnabled(false);
        Btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_printActionPerformed(evt);
            }
        });
        Panel_Lateral.add(Btn_print, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 327, 130, 72));

        getContentPane().add(Panel_Lateral, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 70, 140, 410));

        Txt_Editor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        Txt_Editor.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        Txt_Editor.setForeground(new java.awt.Color(77, 77, 77));
        Txt_Editor.setOpaque(false);
        Txt_Editor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Txt_EditorMouseClicked(evt);
            }
        });
        Txt_Editor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_EditorKeyTyped(evt);
            }
        });
        Scroll_Editor.setViewportView(Txt_Editor);

        getContentPane().add(Scroll_Editor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 920, 400));

        Txt_Output.setEditable(false);
        Txt_Output.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        Txt_Output.setForeground(new java.awt.Color(77, 77, 77));
        Txt_Output.setOpaque(false);
        Scroll_Salida.setViewportView(Txt_Output);

        getContentPane().add(Scroll_Salida, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 920, 150));

        Lbl_Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Code.png"))); // NOI18N
        getContentPane().add(Lbl_Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 500, 120, -1));

        Lbl_Wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Fondo.png"))); // NOI18N
        Lbl_Wallpaper.setToolTipText("");
        getContentPane().add(Lbl_Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 658));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Txt_EditorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_EditorKeyTyped

        int letraPresionada = evt.getKeyChar();
        if (letraPresionada == KeyEvent.VK_SPACE || letraPresionada == '[') {
            //JOptionPane.showMessageDialog(this, "Presiona espacio");
        } else if (letraPresionada == '\\') {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Este programa no permite la insercion del caracter \'\\\'");
        }
    }//GEN-LAST:event_Txt_EditorKeyTyped

    private void Btn_doWhileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_doWhileActionPerformed
        int posicionCursor = Txt_Editor.getCaretPosition();
        String codigoRepita = "repita\n\n#cuando<  >";

        try {
            // Inserta el bloque repita-cuando
            Txt_Editor.getDocument().insertString(posicionCursor, codigoRepita, null);
            // Pinta de color azul las plabras reservadas
            Txt_Editor.getStyledDocument().setCharacterAttributes(posicionCursor, 6, styleReservada, false);
            Txt_Editor.getStyledDocument().setCharacterAttributes(posicionCursor + 8, 8, styleReservada, false);
            Txt_Editor.getStyledDocument().setCharacterAttributes(posicionCursor + 18, 1, styleReservada, false);
        } catch (BadLocationException ex) {
        }

        // Coloca el cursor en la condicion de parada
        Txt_Editor.setCaretPosition(posicionCursor + 17);
    }//GEN-LAST:event_Btn_doWhileActionPerformed

    /**
     * Evento utilizado para insertar un bloque de codigo del ciclo 'mientras'
     *
     * @param evt
     */
    private void Btn_whileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_whileActionPerformed
        int posicionCursor = Txt_Editor.getCaretPosition();
        String codigoMientras = "mientras<  >\n\n#mientras";

        try {
            // Inserta el bloque mientras
            Txt_Editor.getDocument().insertString(posicionCursor, codigoMientras, null);
            // Pinta de color azul las plabras reservadas
            Txt_Editor.getStyledDocument().setCharacterAttributes(posicionCursor, 9, styleReservada, false);
            Txt_Editor.getStyledDocument().setCharacterAttributes(posicionCursor + 11, 1, styleReservada, false);
            Txt_Editor.getStyledDocument().setCharacterAttributes(posicionCursor + 14, 9, styleReservada, false);
        } catch (BadLocationException ex) {
        }

        // Coloca el cursor en la condicion de parada
        Txt_Editor.setCaretPosition(posicionCursor + 10);
    }//GEN-LAST:event_Btn_whileActionPerformed

    private void Txt_EditorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Txt_EditorMouseClicked

        // Verifica si el click presionado fue el izquierdo = 1
        if (evt.getButton() == 1) {
            //JOptionPane.showMessageDialog(this, "Este es el que necesito");
        }
    }//GEN-LAST:event_Txt_EditorMouseClicked

    /**
     * Evento utilizado para insertar la sentencia de imprimir en consola
     *
     * @param evt
     */
    private void Btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_printActionPerformed
        int posicionCursor = Txt_Editor.getCaretPosition();
        String codigoImprimir = "imprimir<\"  \">\n";

        try {
            // Inserta el bloque mientras
            Txt_Editor.getDocument().insertString(posicionCursor, codigoImprimir, null);
            // Pinta de color azul las plabras reservadas
            Txt_Editor.getStyledDocument().setCharacterAttributes(posicionCursor, 10, styleReservada, false);
            Txt_Editor.getStyledDocument().setCharacterAttributes(posicionCursor + 12, 2, styleReservada, false);
        } catch (BadLocationException ex) {
        }

        // Coloca el cursor en la condicion de parada
        Txt_Editor.setCaretPosition(posicionCursor + 11);
    }//GEN-LAST:event_Btn_printActionPerformed

    private void Btn_ifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ifActionPerformed
        int posicionCursor = Txt_Editor.getCaretPosition();
        String codigoSi = "si<  >\n\n#si\n";

        try {
            // Inserta la sentencia si
            Txt_Editor.getDocument().insertString(posicionCursor, codigoSi, null);
            // Pinta de color azul las plabras reservadas
            Txt_Editor.getStyledDocument().setCharacterAttributes(posicionCursor, 3, styleReservada, false);
            Txt_Editor.getStyledDocument().setCharacterAttributes(posicionCursor + 5, 1, styleReservada, false);
            Txt_Editor.getStyledDocument().setCharacterAttributes(posicionCursor + 8, 3, styleReservada, false);
        } catch (BadLocationException ex) {
        }

        // Coloca el cursor en la condicion de parada
        Txt_Editor.setCaretPosition(posicionCursor + 4);
    }//GEN-LAST:event_Btn_ifActionPerformed

    private void Lbl_EjecutarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Lbl_EjecutarMouseClicked
        JOptionPane.showMessageDialog(this, "Acaba de hacer click en ejecutar");

        Interprete corrida = new Interprete();
        Document salida = Txt_Output.getDocument();

        // Limpia el campo de salida para una nueva ejecucion.        
        try {
            salida.remove(0, salida.getLength());

            corrida.ejecutarCodigo(Txt_Editor.getDocument().getText(0, Txt_Editor.getDocument().getLength()));
            salida.insertString(0, corrida.getErrores().getDatos(), styleReservada);

        } catch (BadLocationException ex) {
        }
    }//GEN-LAST:event_Lbl_EjecutarMouseClicked

    private void Lbl_CompilarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Lbl_CompilarMouseClicked

        Document documento = Txt_Editor.getDocument();
        try {
            // Obtiene todo el codigo del Editor
            String codigo = documento.getText(0, documento.getLength());

            SyntaxChecker checker = new SyntaxChecker();
            checker.verificarCodigo(codigo);

            // Borra el texto que haya en la salida
            Txt_Output.getDocument().remove(0, Txt_Output.getDocument().getLength());

            // Pega la salida en la consola
            if (checker.getSalidaRevision().equals("Compilación correcta\n")) {
                Lbl_Ejecutar.setEnabled(true);
                Txt_Output.getDocument().insertString(0, checker.getSalidaRevision(), Txt_Editor.getStyle("Palabra reservada"));
            } else {
                Txt_Output.getDocument().insertString(0, checker.getSalidaRevision(), Txt_Output.getStyle("Codigo Fail"));
            }

        } catch (BadLocationException ex) {
        }
    }//GEN-LAST:event_Lbl_CompilarMouseClicked

    /**
     * Evento utilizado para guardar el contenido de el editor en un archivo
     * de texto
     * @param evt 
     */
    private void Lbl_GuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Lbl_GuardarMouseClicked
        // Crea una ventana que solicita al usuario donde guardar el archivo
        JFileChooser ventanaGuardar = new JFileChooser();
        ventanaGuardar.setDialogTitle("Guardar código GiraCODE");
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".txt", "txt", "text");
        ventanaGuardar.setFileFilter(filter);
        ventanaGuardar.setAcceptAllFileFilterUsed(false);
        int seleccion = ventanaGuardar.showSaveDialog(this);

        // Verifica la seleccion del nombre y la ruta para enviar a guardar el archivo
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            // Obtiene la ruta seleccionada
            String ruta = ventanaGuardar.getSelectedFile().getAbsolutePath();
            // Verifica si hay que agregarle extension al archivo
            if(!ruta.endsWith(".txt")){
                ruta += ".txt";
            }
            // Crea un archivo con la ruta seleccionada
            File archivoSeleccionado = new File(ruta);
            // Verifica si el archivo existe
            if (archivoSeleccionado.exists()) {
                // Ha seleccionado un archivo existente. Pregunta si desea sobreescribirlo
                int opt = JOptionPane.showConfirmDialog(this, "Esta seguro que desea sobreescribir el archivo "
                        + ventanaGuardar.getSelectedFile().getName() + "?",
                        "Sobreescribir archivo", JOptionPane.YES_NO_OPTION);
                // Verifica si la opcion seleccionada es para sobreescribir el archivo o no
                if (opt == JOptionPane.OK_OPTION) {
                    // SOBREESCRIBE EL ARCHIVO 
                    try {
                        String codigo = Txt_Editor.getDocument().getText(0, Txt_Editor.getDocument().getLength());
                        // Evia a sobreescribir el archivo.
                        new TxtHelper().guardarTxt(archivoSeleccionado, codigo);
                    } catch (BadLocationException ex) {
                        Logger.getLogger(IDE.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else{
                try {
                    String codigo = Txt_Editor.getDocument().getText(0, Txt_Editor.getDocument().getLength());
                    new TxtHelper().guardarTxt(archivoSeleccionado, codigo);
                } catch (BadLocationException ex) {
                    Logger.getLogger(IDE.class.getName()).log(Level.SEVERE, null, ex);
                }                 
            }
        }
    }//GEN-LAST:event_Lbl_GuardarMouseClicked

    /**
     * Evento utilizado para cargar el contenido de un archivo de texto en el editor
     * @param evt 
     */
    private void Lbl_CargarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Lbl_CargarMouseClicked
        JFileChooser ventanaAbrir = new JFileChooser();
        ventanaAbrir.setDialogTitle("Cargar código GiraCODE");
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".txt", "txt", "text");
        ventanaAbrir.setFileFilter(filter);
        ventanaAbrir.setAcceptAllFileFilterUsed(false);
        int seleccion = ventanaAbrir.showOpenDialog(this);
        
        if(seleccion == JFileChooser.APPROVE_OPTION){            
            // Obtiene la ruta seleccionada
            String ruta = ventanaAbrir.getSelectedFile().getAbsolutePath();
            // Verifica si hay que agregarle extension al archivo            
            if(!ruta.endsWith(".txt")){
                ruta += ".txt";
            }
            // Crea un archivo con la ruta seleccionada
            File archivoSeleccionado = new File(ruta);
            // Verifica si el archivo existe
            if (archivoSeleccionado.exists()) {
                try {
                    // Eliminar el codigo que haya en el editor en ese momento
                    Txt_Editor.getDocument().remove(0, Txt_Editor.getDocument().getLength());
                    String codigoArchivo = new TxtHelper().cargarTXT(archivoSeleccionado);
                    Txt_Editor.getDocument().insertString(0, codigoArchivo, null);                
                } catch (BadLocationException ex) {
                    Logger.getLogger(IDE.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else{
                JOptionPane.showMessageDialog(this, "El archivo buscado, no existe en el directorio");
            }           
        }
    }//GEN-LAST:event_Lbl_CargarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IDE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_doWhile;
    private javax.swing.JButton Btn_for;
    private javax.swing.JButton Btn_if;
    private javax.swing.JButton Btn_print;
    private javax.swing.JButton Btn_while;
    private javax.swing.JLabel Lbl_Cargar;
    private javax.swing.JLabel Lbl_Compilar;
    private javax.swing.JLabel Lbl_Ejecutar;
    private javax.swing.JLabel Lbl_Guardar;
    private javax.swing.JLabel Lbl_Logo;
    private javax.swing.JLabel Lbl_Wallpaper;
    private javax.swing.JPanel Panel_Lateral;
    private javax.swing.JPanel Panel_Superior;
    private javax.swing.JScrollPane Scroll_Editor;
    private javax.swing.JScrollPane Scroll_Salida;
    private javax.swing.JTextPane Txt_Editor;
    private javax.swing.JTextPane Txt_Output;
    // End of variables declaration//GEN-END:variables
}
